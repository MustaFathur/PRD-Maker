name: Deploy to Cloud Run

on:
  push:
    paths:
      - "Cloud_Computing/backend/**"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Google Auth
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v1"
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate Docker with GCP
        run: gcloud auth configure-docker

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME="gcr.io/${{ secrets.GCP_PROJECT_ID }}/express-backend"
          cd Cloud_Computing/backend
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy express-backend \
            --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/express-backend \
            --region=${{ secrets.GCP_REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --set-env-vars GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }},GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }},REDIRECT_URI=${{ secrets.REDIRECT_URI }},GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},BUCKET_NAME=${{ secrets.BUCKET_NAME }},DB_USERNAME=${{ secrets.DB_USERNAME }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_DATABASE=${{ secrets.DB_DATABASE }},DB_HOST=${{ secrets.DB_HOST }},DB_DIALECT=${{ secrets.DB_DIALECT }}